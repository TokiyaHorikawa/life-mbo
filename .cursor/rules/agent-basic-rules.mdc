---
description: Basic rules for AI Agent. Please read them.
globs: 
alwaysApply: false
---
## Implementation steps

1. 要件把握
2. 既存コードの確認
3. 設計
4. 実装
5. テスト
5. 要件達成 Check
6. linter check, type check

難易度の高い実装こそ設計が重要です。
また、テストは品質を担保するには必ず必要です。無ければ追加しましょう。
意味なく既存コードの振る舞いを破壊してはいけません。振る舞いを変更する場合は、明確な仕様として実装する必要があります。

## Allow commands

- 開発時に関するコマンド実行は許可する(ex: yarn tsc, yarn add, yarn isntall, yarn dev, supabase start)
- 破壊的な変更はコマンド実行時に確認して欲しい

## Docs management for AI

- `./.cursor/docs/*` には、このプロダクトや開発に関するドキュメントを追記していきます。
  - 新規に入った開発メンバーがキャッチアップするために必要な情報が有れば記載してください
  - プロダクトのドメイン知識もここに記載してください
  - 情報が足りないと思った場合はここを確認してください
- `./.cursor/rules/*` には、AIであるあなたのためのルールが記載されています
  - ルールを確認したい場合はここを確認してください
  - 追加の指示や、今後も知っておいた方が良いルールが有れば自分で記載してください

- `./.cursor/memories/*`以下は、あなたが自由に利用していい記憶装置です
  - why: AI AgentはContextが長くなると要約されて情報を失う作りになっている
    - 一連のタスクで重要な情報は記載すること
    - 依頼者である user に情報共有する意味でも価値がある
  - 不要になったら user が削除するので、自由に書き殴ってください


## Error case

- エラーコードをから現状を分析して仮説を立てる
- 水平思考を用いる
- 2回以上同じエラーが出る場合はアプローチや仮説から疑う批判的思考を用いる